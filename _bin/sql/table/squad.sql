DROP TABLE IF EXISTS squads, squad_users, squad_invitations CASCADE;

CREATE TABLE squads(
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  private boolean NOT NULL DEFAULT false,
  id_owner integer REFERENCES users NOT NULL UNIQUE,
  joinable boolean NOT NULL DEFAULT true
);

CREATE TABLE squad_users(
  id_squad integer REFERENCES squads,
  id_user integer REFERENCES users,
  PRIMARY KEY(id_squad, id_user),
  fk_member integer REFERENCES users UNIQUE,
  UNIQUE(id_squad, fk_member),
  CHECK(fk_member IS NULL OR fk_member=id_user),

	pending boolean,
	is_blocked boolean NOT NULL DEFAULT false,
	CHECK(
	  (fk_member IS NOT NULL AND pending IS NULL AND is_blocked IS FALSE)
	    OR (fk_member IS NULL AND pending IS NOT NULL AND is_blocked IS FALSE)
	    OR (fk_member IS NULL AND pending IS NULL AND is_blocked)
	  )
);
ALTER TABLE squads ADD CONSTRAINT fk_squad_owner FOREIGN KEY(id, id_owner) REFERENCES squad_users(id_squad, fk_member) DEFERRABLE;

CREATE TABLE squad_invitations(
  id_squad integer REFERENCES squads ON DELETE CASCADE,
  id_target integer REFERENCES users,
  id_creator integer REFERENCES users,
  PRIMARY KEY(id_squad, id_target, id_creator),
  CHECK(id_creator<>id_target),

  FOREIGN KEY(id_squad, id_creator) REFERENCES squad_users(id_squad, fk_member) DEFERRABLE,
  FOREIGN KEY(id_squad, id_target) REFERENCES squad_users(id_squad, id_user) ON DELETE CASCADE
);